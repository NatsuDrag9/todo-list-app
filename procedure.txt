1.) Created a test list
2.) Implemented tests for initial rendering of the layout without functionality of each DOM/component
3.) Implemented mock tests for API call and created a mock API call to task_list.json
4.) Using axios because fetch requires absolute path as the parameter
5.) Implemented test for pagination
6.) Implemeted initial rendering of checkboxes
7.) Implemented filter functionality

For 100% scalability, we can use a central store for state management like RTK, Zustand or signals. For this app, signals would be a good choice. Make the api call and store the tasks in a signal. Then ensure caching to prevent making calls for redundant data


Evaluating Parameters (on a scale of 10 for each):
1.) TDD approach
2.) Clean code -- linting, variable names, 
3.) Test coverage
4.) Implementation -- full functionality and CSS
5.) Test quality -- how effective is the test in capturing requirements, edge cases